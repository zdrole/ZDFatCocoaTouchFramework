// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		00DF29311AA682FB001898C2 /* DeleteDerivedData */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 00DF29321AA682FB001898C2 /* Build configuration list for PBXAggregateTarget "DeleteDerivedData" */;
			buildPhases = (
				00DF29351AA6835E001898C2 /* ShellScript */,
			);
			dependencies = (
			);
			name = DeleteDerivedData;
			productName = DeleteDerivedData;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		004C5A261A7E0DE90048E383 /* ZDFramework.h in Headers */ = {isa = PBXBuildFile; fileRef = 004C5A251A7E0DE90048E383 /* ZDFramework.h */; settings = {ATTRIBUTES = (Public, ); }; };
		004C5A2C1A7E0DE90048E383 /* ZDFramework.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 004C5A201A7E0DE90048E383 /* ZDFramework.framework */; };
		004C5A331A7E0DE90048E383 /* ZDFrameworkTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 004C5A321A7E0DE90048E383 /* ZDFrameworkTests.swift */; };
		004C5A3F1A7E11270048E383 /* SwiftTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = 004C5A3E1A7E11270048E383 /* SwiftTest.swift */; };
		004C5A401A7E11980048E383 /* SwiftTest.swift in Headers */ = {isa = PBXBuildFile; fileRef = 004C5A3E1A7E11270048E383 /* SwiftTest.swift */; };
		004C5A431A7E1C970048E383 /* ObjectiveCTest.h in Headers */ = {isa = PBXBuildFile; fileRef = 004C5A411A7E1C970048E383 /* ObjectiveCTest.h */; settings = {ATTRIBUTES = (Public, ); }; };
		004C5A441A7E1C970048E383 /* ObjectiveCTest.m in Sources */ = {isa = PBXBuildFile; fileRef = 004C5A421A7E1C970048E383 /* ObjectiveCTest.m */; };
		00F75F831AEB5CFB00E2906B /* ObjectiveCTest.m in Headers */ = {isa = PBXBuildFile; fileRef = 004C5A421A7E1C970048E383 /* ObjectiveCTest.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		0040A51E1AAD9B0E00D97071 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 004C5A171A7E0DE90048E383 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 00DF29311AA682FB001898C2;
			remoteInfo = DeleteDerivedData;
		};
		004C5A2D1A7E0DE90048E383 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 004C5A171A7E0DE90048E383 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 004C5A1F1A7E0DE90048E383;
			remoteInfo = ZDFramework;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		004C5A201A7E0DE90048E383 /* ZDFramework.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = ZDFramework.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		004C5A241A7E0DE90048E383 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		004C5A251A7E0DE90048E383 /* ZDFramework.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ZDFramework.h; sourceTree = "<group>"; };
		004C5A2B1A7E0DE90048E383 /* ZDFrameworkTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = ZDFrameworkTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		004C5A311A7E0DE90048E383 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		004C5A321A7E0DE90048E383 /* ZDFrameworkTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ZDFrameworkTests.swift; sourceTree = "<group>"; };
		004C5A3E1A7E11270048E383 /* SwiftTest.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = SwiftTest.swift; sourceTree = "<group>"; };
		004C5A411A7E1C970048E383 /* ObjectiveCTest.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ObjectiveCTest.h; sourceTree = "<group>"; };
		004C5A421A7E1C970048E383 /* ObjectiveCTest.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = ObjectiveCTest.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		004C5A1C1A7E0DE90048E383 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		004C5A281A7E0DE90048E383 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				004C5A2C1A7E0DE90048E383 /* ZDFramework.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		004C5A161A7E0DE90048E383 = {
			isa = PBXGroup;
			children = (
				004C5A221A7E0DE90048E383 /* ZDFramework */,
				004C5A2F1A7E0DE90048E383 /* ZDFrameworkTests */,
				004C5A211A7E0DE90048E383 /* Products */,
			);
			sourceTree = "<group>";
		};
		004C5A211A7E0DE90048E383 /* Products */ = {
			isa = PBXGroup;
			children = (
				004C5A201A7E0DE90048E383 /* ZDFramework.framework */,
				004C5A2B1A7E0DE90048E383 /* ZDFrameworkTests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		004C5A221A7E0DE90048E383 /* ZDFramework */ = {
			isa = PBXGroup;
			children = (
				004C5A3D1A7E11100048E383 /* Swift */,
				004C5A3C1A7E11050048E383 /* ObjectiveC */,
				004C5A231A7E0DE90048E383 /* Supporting Files */,
				00A7603F1A9551D6004DDBFE /* TestsFiles */,
			);
			path = ZDFramework;
			sourceTree = "<group>";
		};
		004C5A231A7E0DE90048E383 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				004C5A251A7E0DE90048E383 /* ZDFramework.h */,
				004C5A241A7E0DE90048E383 /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		004C5A2F1A7E0DE90048E383 /* ZDFrameworkTests */ = {
			isa = PBXGroup;
			children = (
				004C5A321A7E0DE90048E383 /* ZDFrameworkTests.swift */,
				004C5A301A7E0DE90048E383 /* Supporting Files */,
			);
			path = ZDFrameworkTests;
			sourceTree = "<group>";
		};
		004C5A301A7E0DE90048E383 /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				004C5A311A7E0DE90048E383 /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		004C5A3C1A7E11050048E383 /* ObjectiveC */ = {
			isa = PBXGroup;
			children = (
				004C5A411A7E1C970048E383 /* ObjectiveCTest.h */,
				004C5A421A7E1C970048E383 /* ObjectiveCTest.m */,
			);
			name = ObjectiveC;
			sourceTree = "<group>";
		};
		004C5A3D1A7E11100048E383 /* Swift */ = {
			isa = PBXGroup;
			children = (
				004C5A3E1A7E11270048E383 /* SwiftTest.swift */,
			);
			name = Swift;
			sourceTree = "<group>";
		};
		00A7603F1A9551D6004DDBFE /* TestsFiles */ = {
			isa = PBXGroup;
			children = (
			);
			name = TestsFiles;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		004C5A1D1A7E0DE90048E383 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				004C5A261A7E0DE90048E383 /* ZDFramework.h in Headers */,
				004C5A431A7E1C970048E383 /* ObjectiveCTest.h in Headers */,
				00F75F831AEB5CFB00E2906B /* ObjectiveCTest.m in Headers */,
				004C5A401A7E11980048E383 /* SwiftTest.swift in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		004C5A1F1A7E0DE90048E383 /* ZDFramework */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 004C5A361A7E0DE90048E383 /* Build configuration list for PBXNativeTarget "ZDFramework" */;
			buildPhases = (
				004C5A1B1A7E0DE90048E383 /* Sources */,
				004C5A1C1A7E0DE90048E383 /* Frameworks */,
				004C5A1D1A7E0DE90048E383 /* Headers */,
				004C5A1E1A7E0DE90048E383 /* Resources */,
				009C0C211AACF0DE0044DDC7 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
				0040A51F1AAD9B0E00D97071 /* PBXTargetDependency */,
			);
			name = ZDFramework;
			productName = ZDFramework;
			productReference = 004C5A201A7E0DE90048E383 /* ZDFramework.framework */;
			productType = "com.apple.product-type.framework";
		};
		004C5A2A1A7E0DE90048E383 /* ZDFrameworkTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 004C5A391A7E0DE90048E383 /* Build configuration list for PBXNativeTarget "ZDFrameworkTests" */;
			buildPhases = (
				004C5A271A7E0DE90048E383 /* Sources */,
				004C5A281A7E0DE90048E383 /* Frameworks */,
				004C5A291A7E0DE90048E383 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				004C5A2E1A7E0DE90048E383 /* PBXTargetDependency */,
			);
			name = ZDFrameworkTests;
			productName = ZDFrameworkTests;
			productReference = 004C5A2B1A7E0DE90048E383 /* ZDFrameworkTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		004C5A171A7E0DE90048E383 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0630;
				ORGANIZATIONNAME = "ziga drole";
				TargetAttributes = {
					004C5A1F1A7E0DE90048E383 = {
						CreatedOnToolsVersion = 6.1.1;
					};
					004C5A2A1A7E0DE90048E383 = {
						CreatedOnToolsVersion = 6.1.1;
					};
					00DF29311AA682FB001898C2 = {
						CreatedOnToolsVersion = 6.3;
					};
				};
			};
			buildConfigurationList = 004C5A1A1A7E0DE90048E383 /* Build configuration list for PBXProject "ZDFramework" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 004C5A161A7E0DE90048E383;
			productRefGroup = 004C5A211A7E0DE90048E383 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				00DF29311AA682FB001898C2 /* DeleteDerivedData */,
				004C5A1F1A7E0DE90048E383 /* ZDFramework */,
				004C5A2A1A7E0DE90048E383 /* ZDFrameworkTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		004C5A1E1A7E0DE90048E383 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		004C5A291A7E0DE90048E383 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		009C0C211AACF0DE0044DDC7 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "################################################################################\n#\n# c.f. http://stackoverflow.com/questions/3520977/build-fat-static-library-device-simulator-using-xcode-and-sdk-4\n#\n# Version 2.7\n#\n# Latest Change:\n# - Supports iPhone 5 / iPod Touch 5 (uses Apple's workaround to lipo bug)\n#\n# Purpose:\n#   Automatically create a Universal static library for iPhone + iPad + iPhone Simulator from within XCode\n#\n# Author: Adam Martin - http://twitter.com/t_machine_org\n# Based on: original script from Eonil (main changes: Eonil's script WILL NOT WORK in Xcode GUI - it WILL CRASH YOUR COMPUTER)\n############HOT TO RUN THIS XCODE SCRIPT FROM XCODE #############################\n#\n#Im not gona paste here Xcode run script.. sript have own repo for changes and it only \"path linked\"\n#$SRCROOT         /our path to project\n#dirname $SRCROOT  / dirname retuns path to file, in our case srcroot is folder so we go one folder back\n#basename $file    / returns file name\n\n#BUILDIND_WORSPACE_OR_PROJECT set to work correctly\n#subPath=\"$(dirname $SRCROOT)\"       #go one folder back from project directorij\n#addPath= \"$subPath/ZDStaticLibraryXcodeScript/ZDStaticLibraryXcodeScript.sh\"     #go to script path\n#echo $addPath      #run script\n#################################################################################\n\n\nset -e\nset -o pipefail\n\n#################[ Tests: helps workaround any future bugs in Xcode ]########\n#\nDEBUG_THIS_SCRIPT=\"true\"\n\nif [ $DEBUG_THIS_SCRIPT = \"true\" ]\nthen\necho \"################################## ZIGAS ##################################################################\"\necho \"DEBUG: V XCODE VEDNO KO BUILDAS IZBER SIMULATOR - ZA DEVICE JE NEZNAN ERROR !!!!!\"\necho \"\t\t 1.RUN:Debug universal framework: DerivedData/.../Products/Debug-universal\"\necho \"APPSTORE:  app more vsebovati samo iphoneOS release framework\"\necho \"\t\t 1.RUN: Release iphoneOS framework_ DerivedData/.../Products/Release-iphoneos (edit sheme/run/release)..press run\"\necho \"\t\t 2.ARCHIVE:Release iphoneOS framework_ DerivedData/<PROJECT_NAME>/Build/Intermediates/ArchiveIntermediates/<PROJECT_NAME>/IntermediateBuildFilesPath/UninstalledProducts/Release-iphoneos (Product/Archive)\"\"\necho \"################################# COMMAND GET ALL VARIABLES,BUILD SETTINGS ####################################\"\necho \"terminal: go to project.xcodeproj -> xcodebuild -project ZDFramework.xcodeproj -target ZDFramework -showBuildSettings\"\n#xcodebuild -project \"${PROJECT_NAME}.xcodeproj\" -target \"${PROJECT_NAME}\" -showBuildSettings\"\necho \"################################# XCODE PRINTING SOME PATHS, VARIABLES ########################################\"\necho \"BUILDING_WORSPACE_OR_PROJECT = value 'WORKSPACE' OR 'PROJECT' \"\necho \"ACTION = $ACTION\"\necho \"TARGET_NAME = $TARGET_NAME\"\necho \"EXECUTABLE_NAME = $EXECUTABLE_NAME\"\necho \"PROJECT_NAME = $PROJECT_NAME\"\necho \"SRCROOT = $SRCROOT\"\necho \"BUILD_DIR  = $BUILD_DIR\"\necho \"BUILD_ROOT = $BUILD_ROOT\"\necho \"SYMROOT    = $SYMROOT\"\necho \"OBJROOT    = $OBJROOT\"\necho \"CONFIGURATION_BUILD_DIR = $CONFIGURATION_BUILD_DIR\"\necho \"BUILT_PRODUCTS_DIR = $BUILT_PRODUCTS_DIR\"\necho \"TARGET_BUILD_DIR = $TARGET_BUILD_DIR\"\necho \"CONFIGURATION_TEMP_DIR = $CONFIGURATION_TEMP_DIR\"\necho \"CONFIGURATION = $CONFIGURATION\"\necho \"################# FROM WEB: HOW THEY DID  ###################\"\necho \"URL:https://kodmunki.wordpress.com/2015/03/04/cocoa-touch-frameworks-for-ios8-remix/\"\necho \"Framework for archive-appstore builds at path: DerivedData/<PROJECT_NAME>/Build/Intermediates/ArchiveIntermediates/<PROJECT_NAME>/IntermediateBuildFilesPath/UninstalledProducts/\"\necho \"Kuko so na webu nardil za testing+appstore-> path/Debug   =(debug iphonesimulator(debug-iphoneos framework) + release iphoneos(framework iz zgrornje poti))\"\necho \"\t\t\t\t\t\t\t\t\t\t       path/Release =(ipshoneos(framework iz zgrornje poti))\"\necho \"Nastavi project build settings tab -> Runpath Search Paths & Framework Search Paths: path/$(CONFIGURATION) ...configuration je Release ali Debug\"\necho \"Nastavi project general tab -> Embedded Binaries & Linked Frameworks and Libraries samo fremork iz Release!!! -Appstore validacija!!!\"\necho \"################################################################################################################\"\n\nfi\n\nBUILDING_WORSPACE_OR_PROJECT=\"PROJECT\"\n\n#####################[ part 1 ]##################\n# First, work out the BASESDK version number (NB: Apple ought to report this, but they hide it)\n#    (incidental: searching for substrings in sh is a nightmare! Sob)\n\nSDK_VERSION=$(echo ${SDK_NAME} | grep -o '.\\{3\\}$')\n\n# Next, work out if we're in SIM or DEVICE\n\nif [ ${PLATFORM_NAME} = \"iphonesimulator\" ]\nthen\nOTHER_SDK_TO_BUILD=iphoneos${SDK_VERSION}\nelse\nOTHER_SDK_TO_BUILD=iphonesimulator${SDK_VERSION}\nfi\necho \"################################# XCODE SELECTED SDK, SCRIPT CREATES OTHER  #################################\"\necho \"XCODE HAS SELECTED PLATFORM: ${PLATFORM_NAME} , VERSION: ${SDK_VERSION} (iOS Deployment Target: ${IPHONEOS_DEPLOYMENT_TARGET})\"\necho \"SCRIPT CREATING BUILD FOR, OTHER_SDK_TO_BUILD = ${OTHER_SDK_TO_BUILD}\"\n#\n#####################[ end of part 1 ]##################\n\n#####################[ part 2 ]##################\n#\n# IF this is the original invocation, invoke WHATEVER other builds are required\n#\n# Xcode is already building ONE target...\n#\n# ...but this is a LIBRARY, so Apple is wrong to set it to build just one.\n# ...we need to build ALL targets\n# ...we MUST NOT re-build the target that is ALREADY being built: Xcode WILL CRASH YOUR COMPUTER if you try this (infinite recursion!)\n#\n#\n# So: build ONLY the missing platforms/configurations.\n\necho \"################################# XCODE TRYS ROOT INVOCATION  #################################\"\nif [ \"true\" == ${ALREADYINVOKED:-false} ]\nthen\necho \"RECURSION: I am NOT the root invocation, so I'm NOT going to recurse\"   # zaklucis ce xcode builda!, kot synhronize,one thread\nelse\n#code to the end\n\n# CRITICAL:\n# Prevent infinite recursion (Xcode sucks)\nexport ALREADYINVOKED=\"true\"    #das mu vedet da si glavni,\n\necho \"SUCCEED: I am the root ... recursing all missing build targets NOW...\"\n\n\n#BUILDING_WORSPACE_OR_PROJECT=\"WORKSPACE\" set in xcode build settings/user-defined/variable before this file is called\nif [ -z \"$BUILDING_WORSPACE_OR_PROJECT\" ]\nthen\necho \"Varible BUILDING_WORSPACE_OR_PROJECT is not setted. You must set it to build correctly!!\"\nexit 1\nelse\nif [ \"$BUILDING_WORSPACE_OR_PROJECT\" == \"PROJECT\" ]\nthen\n#echo \"BUILDING: invoking: xcodebuild -configuration \\\"${CONFIGURATION}\\\" -project \\\"${PROJECT_NAME}.xcodeproj\\\" -target \\\"${TARGET_NAME}\\\" -sdk \\\"${OTHER_SDK_TO_BUILD}\\\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO\" BUILD_DIR=\\\"${BUILD_DIR}\\\" BUILD_ROOT=\\\"${BUILD_ROOT}\\\" SYMROOT=\\\"${SYMROOT}\\\"\n#xcodebuild -configuration \"${CONFIGURATION}\" -project \"${PROJECT_NAME}.xcodeproj\" -target \"${TARGET_NAME}\" -sdk \"${OTHER_SDK_TO_BUILD}\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" SYMROOT=\"${SYMROOT}\" &>/dev/null || die \"xcodebuild project command failed!!\"\n\n#POZOR - ne uporabit SYMROOT=\"${SYMROOT} ker naredi odvecen buidl folder \"ZDFramework.build\"\n#POZOR - ${ACTION} = build -> vedno prej klici \"clean\" sele nato \"build\"\necho \"BUILDING: invoking: xcodebuild -configuration \\\"${CONFIGURATION}\\\" -project \\\"${PROJECT_NAME}.xcodeproj\\\" -target \\\"${TARGET_NAME}\\\" -sdk \\\"${OTHER_SDK_TO_BUILD}\\\" RUN_CLANG_STATIC_ANALYZER=NO ONLY_ACTIVE_ARCH=NO BUILD_DIR=\\\"${BUILD_DIR}\\\" BUILD_ROOT=\\\"${BUILD_ROOT}\\\" clean build\"\nxcodebuild -configuration \"${CONFIGURATION}\" -project \"${PROJECT_NAME}.xcodeproj\" -target \"${PROJECT_NAME}\" -sdk \"${OTHER_SDK_TO_BUILD}\" RUN_CLANG_STATIC_ANALYZER=NO ONLY_ACTIVE_ARCH=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" clean build &>/dev/null || die \"xcodebuild workspace command failed!!\"\nfi\nif [ \"$BUILDING_WORSPACE_OR_PROJECT\" == \"WORKSPACE\" ]\nthen\n#echo \"BUILDING: invoking: xcodebuild -configuration \\\"${CONFIGURATION}\\\" -workspace \\\"${PROJECT_NAME}.xcworkspace\\\" -scheme \\\"${PROJECT_NAME}\\\" -sdk \\\"${OTHER_SDK_TO_BUILD}\\\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO\" BUILD_DIR=\\\"${BUILD_DIR}\\\" BUILD_ROOT=\\\"${BUILD_ROOT}\\\" SYMROOT=\\\"${SYMROOT}\\\"\nxcodebuild -configuration \"${CONFIGURATION}\" -workspace \"${PROJECT_NAME}.xcworkspace\" -scheme \"${PROJECT_NAME}\" -sdk \"${OTHER_SDK_TO_BUILD}\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" SYMROOT=\"${SYMROOT}\" &>/dev/null || die \"xcodebuild workspace command failed!!\"\nelse\necho \"BUILDING_WORSPACE_OR_PROJECT wrong string!!!!\"\nfi\nfi\n\nACTION=\"build\"\n\n#Merge all platform binaries as a fat binary for each configurations.\n\n# Calculate where the (multiple) built files are coming from:\nCURRENTCONFIG_DEVICE_DIR=${SYMROOT}/${CONFIGURATION}-iphoneos\nCURRENTCONFIG_SIMULATOR_DIR=${SYMROOT}/${CONFIGURATION}-iphonesimulator\n\necho \"################################# XCODE TAKING BUILDS FROM PATH #################################\"\necho \"Taking device build from: ${CURRENTCONFIG_DEVICE_DIR}\"\necho \"Taking simulator build from: ${CURRENTCONFIG_SIMULATOR_DIR}\"\n\necho \"################################# XCODE LIPO,CREATING .a LIB #################################\"\n\nCREATING_UNIVERSAL_DIR=${SYMROOT}/${CONFIGURATION}-universal\n\n# ... remove the products of previous runs of this script\n#      NB: this directory is ONLY created by this script - it should be safe to delete!\n\nif [ -d \"${CREATING_UNIVERSAL_DIR}\" ]\nthen\necho \"UNIVERSAL directory: alredy created, deleting everything from ${CREATING_UNIVERSAL_DIR}\"\nrm -rf \"${CREATING_UNIVERSAL_DIR}/\"\nfi\necho \"UNIVERSAL directory: creating fresh folder: ${CREATING_UNIVERSAL_DIR}\"\nmkdir -p \"${CREATING_UNIVERSAL_DIR}\"\n\necho \"UNIVERSAL directory: Copying everything from iphonesimulator to universal including swift modules\"\ncp -r \"${CURRENTCONFIG_SIMULATOR_DIR}/${EXECUTABLE_NAME}.framework\" \"${CREATING_UNIVERSAL_DIR}\"\necho \"UNIVERSAL directory: Copying swift modules from iphoneos to universal\"\ncp -r \"${CURRENTCONFIG_DEVICE_DIR}/${EXECUTABLE_NAME}.framework/Modules/${EXECUTABLE_NAME}.swiftmodule/\" \"${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}.framework/Modules/${EXECUTABLE_NAME}.swiftmodule\"\n\necho \"UNIVERSAL: LIPO :current configuration (${CONFIGURATION})\"\necho \"UNIVERSAL: LIPO :output file at path: ${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}.framework/${EXECUTABLE_NAME}\"\nlipo -create \"${CURRENTCONFIG_DEVICE_DIR}/${EXECUTABLE_NAME}.framework/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_SIMULATOR_DIR}/${EXECUTABLE_NAME}.framework/${EXECUTABLE_NAME}\" -output \"${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}.framework/${EXECUTABLE_NAME}\"\n#xcrun -sdk iphoneos lipo...\n\necho \"########################### NOTE about arhitectures  ###########################\"\necho \"Current arhitectures:suported devices\"\necho \"x86_64 :Simulator,PCs,32&64 bit processors.\"\necho \"i386   :Simulator,PCs,32 bit processors.\"\necho \"ARMv8 / ARM64  == (16777228) cpusubtype (0):  ==>  iPhone6, iPhone6+, iPhone 5s, iPad Air, Retina iPad Mini\"\necho \"ARMv7s == cputype (12) cpusubtype (11)  ==> iPhone 5, iPhone 5c, iPad 4\"\necho \"ARMv7  ==> iPhone 3GS, iPhone 4, iPhone 4S, iPod 3G/4G/5G, iPad, iPad 2, iPad 3, iPad Mini\"\necho \"ARMv6  ==> iPhone, iPhone 3G, iPod 1G/2G \"\n\necho \"Library file at path: ${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\"\necho \"Included arhitectures:\"\nfile ${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}.framework/${EXECUTABLE_NAME}\n\nfi";
		};
		00DF29351AA6835E001898C2 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/bin/bash\n\n#This code  is called before Xcode builds target ( new target is added and setted in main target as dependency).\n#How to add new PRE BUILD - target\n#1. project > target > ios > other > Aggregate\n#2.  main target > build pahases > target dependencies > add new target / Aggregate\n\n#This code is called two times : 1. Xcode makes build ( type= iphoneos OR iphoneos-simulator)\n#                                2. Script makes build (xcodebuild command , type=other from XCode)\n#Both times dependency is called but in  Xcode console LOG from this script is only from XCode\n#For debug is removed DerivedData/ZDPods/Build/Products/Debug-iphonesimulator && Debug-iphoneos\n#For release is removed DerivedData/ZDPods/Build/Products/Release-iphonesimulator && Release-iphoneos\n\nTARGET_B_D=\"$TARGET_BUILD_DIR\"\necho \"Deleting all from path: $TARGET_B_D\"\nrm -rf $TARGET_B_D";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		004C5A1B1A7E0DE90048E383 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				004C5A3F1A7E11270048E383 /* SwiftTest.swift in Sources */,
				004C5A441A7E1C970048E383 /* ObjectiveCTest.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		004C5A271A7E0DE90048E383 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				004C5A331A7E0DE90048E383 /* ZDFrameworkTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		0040A51F1AAD9B0E00D97071 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 00DF29311AA682FB001898C2 /* DeleteDerivedData */;
			targetProxy = 0040A51E1AAD9B0E00D97071 /* PBXContainerItemProxy */;
		};
		004C5A2E1A7E0DE90048E383 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 004C5A1F1A7E0DE90048E383 /* ZDFramework */;
			targetProxy = 004C5A2D1A7E0DE90048E383 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		004C5A341A7E0DE90048E383 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = (
					"$(ARCHS_STANDARD)",
					armv7s,
				);
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = NO;
				SDKROOT = iphoneos;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				TARGETED_DEVICE_FAMILY = "1,2";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		004C5A351A7E0DE90048E383 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = (
					"$(ARCHS_STANDARD)",
					armv7s,
				);
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				CURRENT_PROJECT_VERSION = 1;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				ONLY_ACTIVE_ARCH = NO;
				SDKROOT = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		004C5A371A7E0DE90048E383 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = ZDFramework/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				ONLY_ACTIVE_ARCH = NO;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SWIFT_OBJC_BRIDGING_HEADER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		004C5A381A7E0DE90048E383 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				COPY_PHASE_STRIP = NO;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				FRAMEWORK_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = ZDFramework/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				ONLY_ACTIVE_ARCH = NO;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SWIFT_OBJC_BRIDGING_HEADER = "";
			};
			name = Release;
		};
		004C5A3A1A7E0DE90048E383 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(inherited)",
				);
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = ZDFrameworkTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		004C5A3B1A7E0DE90048E383 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				FRAMEWORK_SEARCH_PATHS = (
					"$(SDKROOT)/Developer/Library/Frameworks",
					"$(inherited)",
				);
				INFOPLIST_FILE = ZDFrameworkTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		00DF29331AA682FB001898C2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		00DF29341AA682FB001898C2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		004C5A1A1A7E0DE90048E383 /* Build configuration list for PBXProject "ZDFramework" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				004C5A341A7E0DE90048E383 /* Debug */,
				004C5A351A7E0DE90048E383 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		004C5A361A7E0DE90048E383 /* Build configuration list for PBXNativeTarget "ZDFramework" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				004C5A371A7E0DE90048E383 /* Debug */,
				004C5A381A7E0DE90048E383 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		004C5A391A7E0DE90048E383 /* Build configuration list for PBXNativeTarget "ZDFrameworkTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				004C5A3A1A7E0DE90048E383 /* Debug */,
				004C5A3B1A7E0DE90048E383 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		00DF29321AA682FB001898C2 /* Build configuration list for PBXAggregateTarget "DeleteDerivedData" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				00DF29331AA682FB001898C2 /* Debug */,
				00DF29341AA682FB001898C2 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 004C5A171A7E0DE90048E383 /* Project object */;
}
